apiVersion: v1
kind: ReplicationController
metadata:
  generation: 1
  labels:
    k8s-app: kubernetes-dashboard
    kubernetes.io/cluster-service: "true"
    version: v1.4.2
  name: kubernetes-dashboard-v1.4.2
  namespace: kube-system
  resourceVersion: "24769"
  selfLink: /api/v1/namespaces/kube-system/replicationcontrollers/kubernetes-dashboard-v1.4.2
  uid: e0138e6b-aed2-11e6-9604-42010a8e0004
spec:
  replicas: 1
  selector:
    k8s-app: kubernetes-dashboard
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly",
          "operator":"Exists"}]'
      creationTimestamp: null
      labels:
        k8s-app: kubernetes-dashboard
        kubernetes.io/cluster-service: "true"
        version: v1.4.2
    spec:
      containers:
      - image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.4.2
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: kubernetes-dashboard
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  fullyLabeledReplicas: 1
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1